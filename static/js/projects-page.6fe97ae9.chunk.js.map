{"version":3,"sources":["../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/Transition.js","pages/AsyncProjectsPage.js","pages/AsyncProjectsPage.module.css"],"names":["TransitionGroupContext","react_default","a","createContext","UNMOUNTED","EXITED","ENTERING","ENTERED","Transition_Transition","_React$Component","Transition","props","context","_this","call","this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","Object","inheritsLoose","getDerivedStateFromProps","_ref","prevState","_proto","prototype","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","node","react_dom_default","findDOMNode","performEnter","performExit","setState","_this2","appearing","timeouts","enterTimeout","onEnter","safeSetState","onEntering","onTransitionEnd","onEntered","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","render","_this$props","children","childProps","objectWithoutPropertiesLoose","createElement","Provider","value","child","Children","only","cloneElement","Component","noop","contextType","propTypes","defaultProps","EXITING","__webpack_exports__","defaultStyleLeft","transition","concat","transform","transitionStylesLeft","entering","entered","defaultStyleRight","transitionStylesRight","AsyncProjectsPage","react__WEBPACK_IMPORTED_MODULE_1___default","className","styles","anim","react_transition_group__WEBPACK_IMPORTED_MODULE_2__","projects","style","C_Users_user_Desktop_projects_biography_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","module","exports"],"mappings":"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","file":"static/js/projects-page.6fe97ae9.chunk.js","sourcesContent":["import React from 'react';\nexport default React.createContext(null);","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport * as PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = ReactDOM.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      // allows for nested Transitions\n      return React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, children(status, childProps));\n    }\n\n    var child = React.Children.only(children);\n    return (// allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, React.cloneElement(child, childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nexport default Transition;","import React from 'react';\r\nimport { Transition } from 'react-transition-group';\r\n// styles\r\nimport styles from './AsyncProjectsPage.module.css';\r\n\r\nconst duration = 300;\r\n\r\nconst defaultStyleLeft = {\r\n  transition: `transform ${duration}ms ease-out`,\r\n  transform: `translateX(-110%)`,\r\n};\r\n\r\nconst transitionStylesLeft = {\r\n  entering: { transform: `translateX(-110%)` },\r\n  entered: { transform: `translateX(0)` },\r\n};\r\n\r\nconst defaultStyleRight = {\r\n  transition: `transform ${duration}ms ease-out`,\r\n  transform: `translateX(110%)`,\r\n};\r\n\r\nconst transitionStylesRight = {\r\n  entering: { transform: `translateX(110%)` },\r\n  entered: { transform: `translateX(0)` },\r\n};\r\n\r\nconst AsyncProjectsPage = () => (\r\n  <div className={styles.anim}>\r\n    <Transition in timeout={duration} appear>\r\n      {state => (\r\n        <ul className={styles.projects}>\r\n          <li>\r\n            <div\r\n              style={{\r\n                ...defaultStyleLeft,\r\n                ...transitionStylesLeft[state],\r\n              }}\r\n            >\r\n              <h3>\r\n                Entwicklung einer Kommunikationskampagne für die Bundesangentur\r\n                für Arbeit (WiSe 2009-2010)\r\n              </h3>\r\n              <p>\r\n                Erstellung und Realisierung eines Kommunikationskonzeptes zur\r\n                Aktivierung von Hartz IV–Empfängerinnen und -Empfängern\r\n                insbesondere Alleinerziehenden, Jugendlichen, jungen Migranten\r\n                sowie Älteren Ziel ist es, dass möglichst viele\r\n                Leistungsempfänger der Grundsicherung (Hartz-IV Empfänger)\r\n                aktiviert werden.\r\n              </p>\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <div\r\n              style={{\r\n                ...defaultStyleRight,\r\n                ...transitionStylesRight[state],\r\n              }}\r\n            >\r\n              <h3>\r\n                ERHARD SPORT - Grundlagenforschung in Form einer Umwelt- und\r\n                Unternehmensanalyse\r\n              </h3>\r\n              <p>\r\n                Erhard Sport International mit Sitz in Rotheburg o.d.Tauber, ist\r\n                einer der führenden Hersteller und Lieferanten der Sportgeräte-\r\n                und Sportartikelindustrie in Deutschland. Zur Sicherung der\r\n                Marktführerschaft und angesichts der immer härter werdenden\r\n                Konkurrenz hat Erhard Sport ein unternehmensexternes\r\n                Marktforschungsprojekt veranlasst. Das Marketforschungsteam der\r\n                Hochschule Ansbach hat intensive Grundlagenforschung betrieben\r\n                und umfangreiche interne und externe Analysen durchgeführt,\r\n              </p>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </Transition>\r\n  </div>\r\n);\r\n\r\nexport default AsyncProjectsPage;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"AsyncProjectsPage_projects__2DSlb\"};"],"sourceRoot":""}